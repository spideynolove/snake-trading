
Right now we focus on implementation, there will be no testing or training yet, 
just code first, then I will bring the code to another GPU server later, remember 
the following directory structure (because you will not be allowed to create new 
files, if you want to create, you must ask my opinion so I can review it)

```
./
├── core/
│   ├── agent.py               # Base RL agent logic (epsilon, memory, training)
│   ├── model.py               # DQN architecture: Linear\_QNet, Dueling, etc.
│   ├── config.py              # Central config registry
│   └── replay\_buffer.py       # Separate prioritized/standard buffer
│
├── env/
│   ├── base\_env.py            # Base class for all ForexEnv variants
│   ├── forex\_env.py           # Basic H1 environment
│   ├── hierarchical\_env.py    # Multi-timeframe environment (D1/H1 logic)
│   └── gym\_adapter.py         # Gym wrapper
│
├── integration/
│   ├── dwx\_connector.py       # Handles live trading via DWX
│   ├── data\_feed.py           # Abstracts loading/syncing price data
│   └── signal\_translator.py   # Converts RL action to MT4-compatible signal
│
├── training/
│   ├── trainer.py             # Offline training loop
│   ├── live\_trainer.py        # Live trading loop
│   ├── grid\_search.py         # Grid search logic
│   ├── config\_generator.py    # Generates training configs
│   └── evaluator.py           # Evaluation and stats logging
│
├── utils/
│   ├── logger.py              # Logging, checkpoints
│   ├── metrics.py             # Reward tracking, win-rate, drawdown, etc.
│   ├── risk.py                # Risk rules and position sizing logic
│   └── plots.py               # Visualization
│
├── tests/
│   ├── test\_env.py
│   ├── test\_agent.py
│   └── test\_trainer.py
│
├── notebooks/                 # For experiments, not core code
│   └── exploration.ipynb
│
├── run.py                     # CLI to launch training, evaluation, or live
└── README.md
```

No docstring and comment in code, no intro, no conclusion in all answers.